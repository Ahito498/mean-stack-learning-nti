{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class StudentService {\n  constructor() {\n    this.students = [{\n      id: 1,\n      name: 'Ahmed Hassan',\n      age: 20,\n      major: 'Computer Science',\n      email: 'ahmed.hassan@university.edu',\n      gpa: 3.8,\n      courses: ['Introduction to Programming', 'Data Structures', 'Algorithms', 'Web Development']\n    }, {\n      id: 2,\n      name: 'Sara Mohamed',\n      age: 19,\n      major: 'Mathematics',\n      email: 'sara.mohamed@university.edu',\n      gpa: 3.9,\n      courses: ['Calculus I', 'Linear Algebra', 'Statistics', 'Number Theory']\n    }, {\n      id: 3,\n      name: 'Omar Ali',\n      age: 21,\n      major: 'Physics',\n      email: 'omar.ali@university.edu',\n      gpa: 3.7,\n      courses: ['Classical Mechanics', 'Quantum Physics', 'Thermodynamics', 'Electromagnetism']\n    }, {\n      id: 4,\n      name: 'Fatima Ahmed',\n      age: 20,\n      major: 'Engineering',\n      email: 'fatima.ahmed@university.edu',\n      gpa: 3.6,\n      courses: ['Engineering Design', 'Materials Science', 'Thermodynamics', 'Fluid Mechanics']\n    }, {\n      id: 5,\n      name: 'Youssef Ibrahim',\n      age: 22,\n      major: 'Business Administration',\n      email: 'youssef.ibrahim@university.edu',\n      gpa: 3.5,\n      courses: ['Business Management', 'Marketing', 'Finance', 'Economics']\n    }];\n  }\n  getStudents() {\n    return this.students;\n  }\n  getStudentById(id) {\n    return this.students.find(student => student.id === id);\n  }\n  updateStudent(id, updates) {\n    const index = this.students.findIndex(student => student.id === id);\n    if (index !== -1) {\n      this.students[index] = {\n        ...this.students[index],\n        ...updates\n      };\n    }\n  }\n  static {\n    this.ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["StudentService","constructor","students","id","name","age","major","email","gpa","courses","getStudents","getStudentById","find","student","updateStudent","updates","index","findIndex","factory","ɵfac","providedIn"],"sources":["/Users/macstoreeg/Desktop/study/NTI tasks/tasks/task-08/src/app/shared/student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nexport interface Student {\n  id: number;\n  name: string;\n  age: number;\n  major: string;\n  email: string;\n  gpa: number;\n  courses: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private students: Student[] = [\n    {\n      id: 1,\n      name: 'Ahmed Hassan',\n      age: 20,\n      major: 'Computer Science',\n      email: 'ahmed.hassan@university.edu',\n      gpa: 3.8,\n      courses: ['Introduction to Programming', 'Data Structures', 'Algorithms', 'Web Development']\n    },\n    {\n      id: 2,\n      name: 'Sara Mohamed',\n      age: 19,\n      major: 'Mathematics',\n      email: 'sara.mohamed@university.edu',\n      gpa: 3.9,\n      courses: ['Calculus I', 'Linear Algebra', 'Statistics', 'Number Theory']\n    },\n    {\n      id: 3,\n      name: 'Omar Ali',\n      age: 21,\n      major: 'Physics',\n      email: 'omar.ali@university.edu',\n      gpa: 3.7,\n      courses: ['Classical Mechanics', 'Quantum Physics', 'Thermodynamics', 'Electromagnetism']\n    },\n    {\n      id: 4,\n      name: 'Fatima Ahmed',\n      age: 20,\n      major: 'Engineering',\n      email: 'fatima.ahmed@university.edu',\n      gpa: 3.6,\n      courses: ['Engineering Design', 'Materials Science', 'Thermodynamics', 'Fluid Mechanics']\n    },\n    {\n      id: 5,\n      name: 'Youssef Ibrahim',\n      age: 22,\n      major: 'Business Administration',\n      email: 'youssef.ibrahim@university.edu',\n      gpa: 3.5,\n      courses: ['Business Management', 'Marketing', 'Finance', 'Economics']\n    }\n  ];\n\n  getStudents(): Student[] {\n    return this.students;\n  }\n\n  getStudentById(id: number): Student | undefined {\n    return this.students.find(student => student.id === id);\n  }\n\n  updateStudent(id: number, updates: Partial<Student>): void {\n    const index = this.students.findIndex(student => student.id === id);\n    if (index !== -1) {\n      this.students[index] = { ...this.students[index], ...updates };\n    }\n  }\n}\n"],"mappings":";AAeA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAIU,KAAAC,QAAQ,GAAc,CAC5B;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,kBAAkB;MACzBC,KAAK,EAAE,6BAA6B;MACpCC,GAAG,EAAE,GAAG;MACRC,OAAO,EAAE,CAAC,6BAA6B,EAAE,iBAAiB,EAAE,YAAY,EAAE,iBAAiB;KAC5F,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,aAAa;MACpBC,KAAK,EAAE,6BAA6B;MACpCC,GAAG,EAAE,GAAG;MACRC,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,YAAY,EAAE,eAAe;KACxE,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,yBAAyB;MAChCC,GAAG,EAAE,GAAG;MACRC,OAAO,EAAE,CAAC,qBAAqB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,kBAAkB;KACzF,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,aAAa;MACpBC,KAAK,EAAE,6BAA6B;MACpCC,GAAG,EAAE,GAAG;MACRC,OAAO,EAAE,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,iBAAiB;KACzF,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,iBAAiB;MACvBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,yBAAyB;MAChCC,KAAK,EAAE,gCAAgC;MACvCC,GAAG,EAAE,GAAG;MACRC,OAAO,EAAE,CAAC,qBAAqB,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW;KACrE,CACF;;EAEDC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACR,QAAQ;EACtB;EAEAS,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACD,QAAQ,CAACU,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;EACzD;EAEAW,aAAaA,CAACX,EAAU,EAAEY,OAAyB;IACjD,MAAMC,KAAK,GAAG,IAAI,CAACd,QAAQ,CAACe,SAAS,CAACJ,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;IACnE,IAAIa,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACd,QAAQ,CAACc,KAAK,CAAC,GAAG;QAAE,GAAG,IAAI,CAACd,QAAQ,CAACc,KAAK,CAAC;QAAE,GAAGD;MAAO,CAAE;;EAElE;;;uBA9DWf,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}